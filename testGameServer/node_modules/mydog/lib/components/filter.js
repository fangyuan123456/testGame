"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Filter = void 0;
class Filter {
    constructor() {
        this.befores = [];
        this.afters = [];
        this.globalBefores = [];
    }
    before(filter) {
        this.befores.push(filter);
    }
    after(filter) {
        this.afters.push(filter);
    }
    globalBefore(filter) {
        this.globalBefores.push(filter);
    }
    beforeFilter(cmd, msg, session, cb) {
        let index = 0;
        let cbFunc = (hasError) => {
            if (hasError || index >= this.befores.length) {
                cb(hasError);
                return;
            }
            let filter = this.befores[index];
            index++;
            filter.before(cmd, msg, session, cbFunc);
        };
        cbFunc();
    }
    afterFilter(cmd, msg, session) {
        let index = 0;
        let cbFunc = () => {
            if (index >= this.afters.length) {
                return;
            }
            let filter = this.afters[index];
            index++;
            filter.after(cmd, msg, session, cbFunc);
        };
        cbFunc();
    }
    globalBeforeFilter(info, session, cb) {
        let index = 0;
        let cbFunc = (hasError) => {
            if (hasError || index >= this.globalBefores.length) {
                cb(hasError);
                return;
            }
            let filter = this.globalBefores[index];
            index++;
            filter.before(info, session, cbFunc);
        };
        cbFunc();
    }
}
exports.Filter = Filter;
